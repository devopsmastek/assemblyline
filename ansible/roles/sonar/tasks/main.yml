---
- name: Create a database for Sonar.
  mysql_db:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    name: "{{ sonar_mysql_database }}"
    login_user: "{{ sonar_mysql_username }}"
    login_password: "{{ sonar_mysql_password }}"
    state: present

- name: Ensure group "sonar" exists
  group:
    name: sonar
    state: present

- name: Create a sonar user.
  mysql_user:
    name: "{{ sonar_mysql_username }}"
    host: "{{ item }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    priv: "{{ sonar_mysql_database }}.*:ALL"
    password: "{{ sonar_mysql_password }}"
  with_items: "{{ sonar_mysql_allowed_hosts }}"

- name: Install Unzip
  apt:
    name: unzip
    state: latest

- name: Download Sonar.
  get_url:
    url: "{{ sonar_download_url }}"
    dest: "{{ workspace }}/{{ sonar_version_directory }}.zip"
    validate_certs: "{{ sonar_download_validate_certs }}"

- name: Change downloaded file permission to 755
  file:
    path: "{{ workspace }}/{{ sonar_version_directory }}.zip"
    # when specifying mode using octal numbers, add a leading 0
    mode: 0775

- name: Unzip Sonar.
  unarchive:
    src: "{{ workspace }}/{{ sonar_version_directory }}.zip"
    dest: /usr/local/
    copy: no
    creates: /usr/local/sonar/COPYING

- name: Move Sonar into place.
  command: >
    mv /usr/local/{{ sonar_version_directory }} /usr/local/sonar
    creates=/usr/local/sonar/COPYING

- include: configure.yml

- name: Create a login user
  user:
    name: sonar
    groups: sonar
    state: present
    shell: /bin/bash       # Defaults to /bin/bash
    system: no             # Defaults to no
    createhome: yes        # Defaults to yes
    home: /usr/local/sonar  # Defaults to /home/<username>
- name: Symlink sonar bin.
  file:
    src: /usr/local/sonar/bin/linux-x86-64/sonar.sh
    dest: /usr/bin/sonar
    state: link
    owner: sonar
    group: sonar
  register: sonar_symlink

- name: Change sonar.sh file permission and ownership
  file:
    path: /usr/local/sonar
    # when specifying mode using octal numbers, add a leading 0
    state: directory
    recurse: yes
    mode: 0775
    owner: sonar
    group: sonar



- name: Add sonar as init script for service management.
  file:
    src: /usr/local/sonar/bin/linux-x86-64/sonar.sh
    dest: /etc/init.d/sonar
    state: link
  when: "ansible_service_mgr != 'systemd'"

- name: Copy SonarQube systemd unit file into place (for systemd systems).
  template:
    src: sonar.unit.j2
    dest: /etc/systemd/system/sonar.service
    owner: root
    group: root
    mode: 0755
  when: "ansible_service_mgr == 'systemd'"

- name: Ensure Sonar is running and set to start on boot.
  service: name=sonar state=started enabled=yes

- name: Allow Sonar time to build on first start.
  pause: seconds=180
  when: sonar_symlink.changed
  tags: ['skip_ansible_lint']

- name: restart service sonar and issue daemon-reload to pick up config changes
  systemd:
    state: restarted
    daemon_reload: yes
    name: sonar

- name: Make sure Sonar is responding on the configured port.
  wait_for: port=9000 delay=3 timeout=300
