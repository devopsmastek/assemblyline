jenkins:
    authorizationStrategy: "loggedInUsersCanDoAnything"
    disableRememberMe: false
    markupFormatter: "plainText"
    mode: NORMAL
    myViewsTabBar: "standard"
security:
    apiToken:
        creationOfLegacyTokenEnabled: false
        tokenGenerationOnCreationEnabled: false
        usageStatisticsEnabled: true
    downloadSettings:
        useBrowser: false
    globalJobDslSecurityConfiguration:
        useScriptSecurity: true
    sSHD:
        port: -1
unclassified:
  badgePlugin:
    disableFormatHTML: false
  casCGlobalConfig:
    configurationPath: "/var/lib/jenkins/jenkins.yaml"
  gitSCM:
    createAccountBasedOnEmail: false
  globalEventsPlugin:
    disableSynchronization: false
    onEventGroovyCode: "log.info(\"Fired event '${event}'.\")"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
  mailer:
    adminAddress: "address not configured yet <nobody@nowhere>"
    charset: "UTF-8"
    useSsl: false
  mavenModuleSet:
    localRepository: "default"
  pollSCM:
    pollingThreadCount: 10
  sonarGlobalConfiguration:
    buildWrapperEnabled: false
tool:
  ant:
    defaultProperties:
    - installSource:
        installers:
        - "antFromApache"
  git:
    installations:
    - home: "git"
      name: "Default"
  groovyInstallation:
    defaultProperties:
    - installSource:
        installers:
        - "groovyInstaller"
  jdk:
    defaultProperties:
    - installSource:
        installers:
        - jdkInstaller:
            acceptLicense: false
  #maven:
    #defaultProperties:
    #- installSource:
        #installers:
        #- "maven"
  msBuildSQRunnerInstallation:
    defaultProperties:
    - installSource:
        installers:
        - "msBuildSonarQubeRunnerInstaller"
  sonarRunnerInstallation:
    defaultProperties:
    - installSource:
        installers:
        - "sonarRunnerInstaller"
jobs:
  - script: >
      folder('testjobs')
  - script: >
      pipelineJob('testjobs/default-agent') {
        definition {
          cps {
            script("""\
              pipeline {
                agent any
                stages {
                  stage ('test') {
                    steps {
                      echo "hello"
                    }
                  }
                }
              }""".stripIndent())
          }
        }
      }          
